-- USE [STAG_SALES_DB]
-------------------------------------------------------------------------------------------------
-- CREATE TABLES
-------------------------------------------------------------------------------------------------

CREATE TABLE CUSTOMERS (
    [CUSTOMERNUMBER] INT,
    [CUSTOMERNAME] VARCHAR(50),
    [CONTACTLASTNAME] VARCHAR(50),
    [CONTACTFIRSTNAME] VARCHAR(50),
    [PHONE] VARCHAR(50),
    [ADDRESSLINE1] VARCHAR(50),
    [ADDRESSLINE2] VARCHAR(50),
    [CITY] VARCHAR(50),
    [STATE] VARCHAR(50),
    [POSTALCODE] VARCHAR(15),
    [COUNTRY] VARCHAR(50),
    [SALESREPEMPLOYEENUMBER] INT,
    [CREDITLIMIT] NUMERIC(10,2)
)
;

CREATE TABLE EMPLOYEES (
    [EMPLOYEENUMBER] INT,
    [LASTNAME] VARCHAR(50),
    [FIRSTNAME] VARCHAR(50),
    [EXTENSION] VARCHAR(10),
    [EMAIL] VARCHAR(100),
    [OFFICECODE] VARCHAR(10),
    [REPORTSTO] INT,
    [JOBTITLE] VARCHAR(50)
)
;

CREATE TABLE OFFICES (
    [OFFICECODE] VARCHAR(10),
    [PHONE] VARCHAR(50),
    [ADDRESSLINE1] VARCHAR(50),
    [ADDRESSLINE2] VARCHAR(50),
    [CITY] VARCHAR(50),
    [STATE] VARCHAR(50),
    [POSTALCODE] VARCHAR(15),
    [COUNTRY] VARCHAR(50),
    [TERRITORY] VARCHAR(10)
)
;

CREATE TABLE ORDER_DETAILS (
    [ORDERNUMBER] INT,
    [PRODUCTCODE] VARCHAR(15),
    [QUANTITYORDERED] INT,
    [PRICEEACH] NUMERIC(10,2),
    [ORDERLINENUMBER] SMALLINT
)
;

CREATE TABLE ORDERS (
    [ORDERNUMBER] INT,
    [ORDERDATE] DATE,
    [REQUIREDDATE] DATE,
    [SHIPPEDDATE] DATE,
    [STATUS] VARCHAR(15),
    [COMMENTS] VARCHAR(MAX),
    [CUSTOMERNUMBER] INT
)
;

CREATE TABLE PAYMENTS (
    [CUSTOMERNUMBER] INT,
    [CHECKNUMBER] VARCHAR(50),
    [PAYMENTDATE] DATE,
    [AMOUNT] NUMERIC(10,2)
)
;

CREATE TABLE PRODUCT_LINES (
    [PRODUCTLINE] VARCHAR(50),
    [TEXTDESCRIPTION] VARCHAR(4000),
    [HTMLDESCRIPTION] VARCHAR(MAX),
    [IMAGE] VARBINARY(MAX)
)
;

-- CREATE TABLE PRODUCTS (
--    [PRODUCTCODE] VARCHAR(15),
--    [PRODUCTNAME] VARCHAR(70),
--    [PRODUCTLINE] VARCHAR(50),
--    [PRODUCTSCALE] VARCHAR(10),
--    [PRODUCTVENDOR] VARCHAR(50),
--    [PRODUCTDESCRIPTION] VARCHAR(MAX),
--    [QUANTITYINSTOCK] SMALLINT,
--    [BUYPRICE] NUMERIC(10,2),
--    [MSRP] NUMERIC(10,2)
-- )
-- ;
-- THERE WERE SOME CHANGES IN PRODUCTS TABLES BECAUSE OF NEW TABLE (PRODUCT_LINES_DESCRIPTION) THAT WAS ADDED RECENTLY..SO REVAMPING IT...
CREATE TABLE PRODUCTS (
    [PRODUCTCODE] VARCHAR(15),
    [PRODUCTNAME] VARCHAR(70),
    [PRODUCTSCALE] VARCHAR(10),
    [PRODUCTVENDOR] VARCHAR(50),
    [PRODUCTDESCRIPTION] VARCHAR(MAX),
    [QUANTITYINSTOCK] SMALLINT,
    [BUYPRICE] NUMERIC(10,2),
    [MSRP] NUMERIC(10,2),
    [PRODUCTLINEID] BIGINT
)
;

CREATE TABLE PRODUCT_CATEGORY (
    [PRODUCTLINENUMBER] BIGINT PRIMARY KEY,
    [PRODUCTLINE] VARCHAR(50),
    [TEXTDESCRIPTION] VARCHAR(4000),
    [HTMLDESCRIPTION] VARCHAR(MAX),
    [IMAGE] VARBINARY(MAX)
)
;


-------------------------------------------------------------------------------------------------

SELECT * FROM CUSTOMERS
;
SELECT * FROM EMPLOYEES
;
SELECT * FROM OFFICES
;
SELECT * FROM ORDERS
;
SELECT * FROM ORDER_DETAILS
;
SELECT * FROM PAYMENTS
;
SELECT * FROM PRODUCTS
;

SELECT SUM(PRICE) FROM (
SELECT  
  OD.*,
  OD.QUANTITYORDERED * OD.PRICEEACH AS PRICE
FROM ORDERS O
JOIN ORDER_DETAILS OD
ON O.ORDERNUMBER = OD.ORDERNUMBER
WHERE CUSTOMERNUMBER = 103
) CON
;
SELECT SUM(AMOUNT) FROM PAYMENTS
WHERE CUSTOMERNUMBER = 103
;

SELECT * FROM ORDERS
;

-------------------------------------------------------------------------------------------------
-- CREATE VIEWS --> FOR TABLE LEVEL TRANSFORMATIONS
-------------------------------------------------------------------------------------------------

CREATE VIEW VW_PRODUCTS
AS
SELECT 
  P.PRODUCTCODE,
  P.PRODUCTNAME,
  PC.PRODUCTLINE AS PRODUCTCATEGORY,
  P.PRODUCTSCALE,
  P.PRODUCTVENDOR,
  P.PRODUCTDESCRIPTION,
  P.QUANTITYINSTOCK,
  P.BUYPRICE,
  P.MSRP
FROM PRODUCTS P
JOIN PRODUCT_CATEGORY PC
ON P.PRODUCTLINEID = PC.PRODUCTLINENUMBER
;

-- SELECT * FROM VW_PRODUCTS;


CREATE VIEW VW_ORDERS
AS
SELECT 
  O.ORDERNUMBER,
  C.CUSTOMERNUMBER,
  E.EMPLOYEENUMBER,
  OFC.OFFICECODE,
  O.ORDERDATE,
  O.REQUIREDDATE,
  O.SHIPPEDDATE,
  -- TOTALPRICE
  O.STATUS,
  O.COMMENTS
FROM ORDERS O
JOIN CUSTOMERS C
ON O.CUSTOMERNUMBER = C.CUSTOMERNUMBER
JOIN EMPLOYEES E
ON C.SALESREPEMPLOYEENUMBER = E.EMPLOYEENUMBER
JOIN OFFICES OFC
ON E.OFFICECODE = OFC.OFFICECODE
;

-- SELECT * FROM VW_ORDERS;


CREATE VIEW VW_ORDER_DETAILS
AS
SELECT DISTINCT 
  O.ORDERNUMBER,
  OD.ORDERLINENUMBER,
  C.CUSTOMERNUMBER,
  E.EMPLOYEENUMBER,
  OFC.OFFICECODE,
  OD.PRODUCTCODE,
  OD.QUANTITYORDERED,
  OD.PRICEEACH,
  OD.QUANTITYORDERED * OD.PRICEEACH AS PRICE
FROM ORDER_DETAILS OD
JOIN ORDERS O
ON O.ORDERNUMBER = OD.ORDERNUMBER
JOIN CUSTOMERS C
ON O.CUSTOMERNUMBER = C.CUSTOMERNUMBER
JOIN EMPLOYEES E
ON C.SALESREPEMPLOYEENUMBER = E.EMPLOYEENUMBER
JOIN OFFICES OFC
ON E.OFFICECODE = OFC.OFFICECODE
;

-- SELECT * FROM VW_ORDER_DETAILS;



CREATE VIEW VW_PAYMENTS
AS
SELECT 
  ROW_NUMBER() OVER(ORDER BY CHECKNUMBER) PAYMENTID,
  P.CUSTOMERNUMBER,
  E.EMPLOYEENUMBER,
  OFC.OFFICECODE,
  P.CHECKNUMBER,
  P.PAYMENTDATE,
  P.AMOUNT
FROM PAYMENTS P
JOIN CUSTOMERS C
ON P.CUSTOMERNUMBER = C.CUSTOMERNUMBER
JOIN EMPLOYEES E
ON C.SALESREPEMPLOYEENUMBER = E.EMPLOYEENUMBER
JOIN OFFICES OFC
ON E.OFFICECODE = OFC.OFFICECODE
;

-- SELECT * FROM VW_PAYMENTS;

